[
    {
        "Name": "sparse_autoencoder_scaling",
        "Title": "Scaling Laws and Evaluation Methods for Sparse Autoencoders in Language Models",
        "Experiment": "The paper presents several key implementations and experiments:\n1. A k-sparse autoencoder architecture using TopK activation function replacing traditional L1 penalty\n2. Auxiliary loss (AuxK) and initialization techniques to prevent dead latents\n3. Training methodology scaled up to 16M latent dimensions on GPT-4\n4. Multiple evaluation metrics including:\n   - Downstream loss\n   - Feature probe recovery\n   - N2G explanations for interpretability\n   - Ablation sparsity measures\n5. Systematic study of scaling relationships between:\n   - Number of latents (n)\n   - Sparsity level (k)\n   - Model size\n   - Compute budget\n6. Analysis of progressive feature recovery and activation patterns",
        "Interestingness": 8,
        "Feasibility": 7,
        "Novelty": 7,
        "novel": false
    },
    {
        "Name": "hierarchical_sparse_ae",
        "Title": "Hierarchical Sparse Autoencoders for Multi-Level Interpretability of Language Model Representations",
        "Experiment": "1. Implement 2-layer hierarchical autoencoder:\n   - Bottom layer: 90% sparsity, focus on basic features\n   - Top layer: 70% sparsity, focus on abstract features\n   - Skip connections with gating mechanism\n2. Training protocol:\n   - Phase 1: Train bottom layer with L1 penalty\n   - Phase 2: Fix bottom layer, train top layer\n   - Phase 3: End-to-end fine-tuning\n3. Loss components:\n   - Layer-specific L1 penalties\n   - Orthogonality constraint between layers\n   - Mutual information minimization\n4. Evaluation metrics:\n   - Feature activation correlation analysis\n   - Semantic level assessment via NLP probing\n   - Compression efficiency\n   - Ablation studies per layer\n5. Comparison with single-layer baseline",
        "Interestingness": 9,
        "Feasibility": 7,
        "Novelty": 8,
        "novel": true
    }
]