# Title: Temporal Sparse Autoencoders: Capturing Sequential Dependencies for Improved Interpretability
# Experiment description: 1. Implement temporal convolution layer with fixed context buffer
2. Add hierarchical temporal consistency loss
3. Implement boundary-aware temporal modeling
4. Train TSA on GPT-2/Gemma activations
5. Evaluate on unlearning benchmark with focus on knowledge isolation
6. Compare feature stability across context windows
7. Analyze feature interpretability via targeted probing
8. Measure impact on general model capabilities

## Run 0: Baseline
Results: {'eval_type_id': 'core', 'eval_config': {'model_name': 'google/gemma-2-2b', 'llm_dtype': 'bfloat16', 'batch_size_prompts': 16, 'n_eval_reconstruction_batches': 200, 'n_eval_sparsity_variance_batches': 2000, 'dataset': 'Skylion007/openwebtext', 'context_size': 128, 'compute_kl': True, 'compute_ce_loss': True, 'compute_l2_norms': True, 'compute_sparsity_metrics': True, 'compute_variance_metrics': True, 'compute_featurewise_density_statistics': False, 'compute_featurewise_weight_based_metrics': False, 'exclude_special_tokens_from_reconstruction': True, 'verbose': False}, 'eval_id': '816e6ded-4a67-43a7-bc3f-01b636f67965', 'datetime_epoch_millis': 1736553167253, 'eval_result_metrics': {'model_behavior_preservation': {'kl_div_score': -0.5279503105590062, 'kl_div_with_ablation': 10.0625, 'kl_div_with_sae': 15.375}, 'model_performance_preservation': {'ce_loss_score': -0.5855263157894737, 'ce_loss_with_ablation': 12.4375, 'ce_loss_with_sae': 18.0, 'ce_loss_without_sae': 2.9375}, 'reconstruction_quality': {'explained_variance': -0.78515625, 'mse': 47.25, 'cossim': -1.0}, 'shrinkage': {'l2_norm_in': 308.0, 'l2_norm_out': 0.0, 'l2_ratio': 0.0, 'relative_reconstruction_bias': -1.0}, 'sparsity': {'l0': 0.0, 'l1': 0.0}, 'token_stats': {'total_tokens_eval_reconstruction': 409600, 'total_tokens_eval_sparsity_variance': 4096000}}, 'eval_result_details': [], 'sae_bench_commit_hash': '972f2ecd7e88c6f60890726de69da2de706a5568', 'sae_lens_id': 'custom_sae', 'sae_lens_release_id': 'google/gemma-2-2b_layer_19_sae', 'sae_lens_version': '5.3.0', 'sae_cfg_dict': {'model_name': 'google/gemma-2-2b', 'd_in': 2304, 'd_sae': 2304, 'hook_layer': 19, 'hook_name': 'blocks.19.hook_resid_post', 'context_size': None, 'hook_head_index': None, 'architecture': 'Custom', 'apply_b_dec_to_input': True, 'finetuning_scaling_factor': None, 'activation_fn_str': 'relu', 'prepend_bos': True, 'normalize_activations': 'none', 'dtype': 'bfloat16', 'device': '', 'dataset_path': '', 'dataset_trust_remote_code': True, 'seqpos_slice': [None], 'training_tokens': -100000, 'sae_lens_training_version': None, 'neuronpedia_id': None}, 'eval_result_unstructured': {}}

## Run 1: Initial Temporal Implementation
Description: Implemented basic temporal convolution with context buffer size 4 and temporal consistency loss. The implementation includes:
1. Temporal convolution layer with fixed context buffer of size 4
2. Context-aware feature extraction using sliding window
3. Basic temporal consistency loss between consecutive timesteps
4. Temporal feature tracking mechanism

Results: Training failed to complete (steps=0). This suggests potential issues with:
- Memory management for temporal buffer
- Batch processing with temporal context
- Gradient computation through temporal connections
- Resource constraints with larger context windows

Next steps:
1. Debug memory usage and batch processing
2. Reduce context buffer size initially
3. Implement gradient checkpointing
4. Add proper error handling for temporal operations
